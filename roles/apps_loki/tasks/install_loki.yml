- name: Creating prometheus user group
  group: name="{{loki_groupId}}"
  become: true

- name: Creating prometheus user
  user:
    name: "{{loki_userId}}"
    group: "{{loki_groupId}}"
    system: yes
    shell: "/sbin/nologin"
    comment: "{{loki_userId}} nologin User"
    createhome: "no"
    state: present

- name: Creating Loki directories
  #debug: msg="rep db  {{loki_db_dir}}"
  file:
    path: "{{ item }}"
    state: "directory"
    owner: "{{ loki_userId }}"
    group: "{{ loki_groupId }}"
  with_items:
    - "{{ loki_db_dir }}"
    - "{{ loki_db_dir }}/wal"
    - "{{ loki_bin_dir }}"
    - "/etc/loki/"

- name: Install Loki
  unarchive:
    src: "{{ loki_proxy_url }}/loki/{{ loki_version }}/loki-{{ loki_version }}.{{ loki_archi }}.zip"
    dest: "{{ loki_bin_dir }}"
    owner: "{{ loki_userId }}"
    group: "{{ loki_groupId }}"
    remote_src: yes

- name: Install Loki logcli
  unarchive:
    src: "{{ loki_proxy_url }}/loki/{{ loki_version }}/logcli-{{ loki_version }}.{{ loki_archi }}.zip"
    dest: "{{ loki_bin_dir }}"
    owner: "{{ loki_userId }}"
    group: "{{ loki_groupId }}"
    remote_src: yes

- name: config file
  template:
    src: loki-local-config.yaml.j2
    dest: /etc/loki/loki-local-config.yaml
    owner: "{{loki_userId}}"
    group: "{{loki_groupId}}"

- name: Copy systemd init file
  template:
    src: init.service.j2
    dest: /etc/systemd/system/{{ loki_serviceName }}.service
  notify: 
    - systemd_reload

- name: Start {{ loki_serviceName }} service
  systemd:
    name: "{{ loki_serviceName }}"
    state: started
    daemon_reload: yes
    enabled: yes

